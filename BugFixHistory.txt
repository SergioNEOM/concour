Concour (версия от 25/09/2018) передан на бета-тестинг.
==============================================================

2018-12-10 Очередь на изменения:
================================
1) Дата проведения соревнований: добавить второе поле с датой (если не в один день проводится).
  В БД можно хранить к-во дней (duration), а не 2 дату. (!! Отследить, на что повлияет)
2) В окне параметров маршрута вводить название и тип, остальные параметры - из главного окна!
3) Привязать список в справочнике маршрутов к соревнованию: у нового соревнования список должен быть пустым
4) На главной форме исправить название: вместо К-во препятствий надо К-во прыжков
5) Дать возможность пользователю изменять названия колонок с препятствиями.
 Заголовки сохранять в БД вместе с остальными переметрами маршрута (и получать их при смене)
6) Пофиксить: параметры, выставленные в главном окне (к-во прыжков, дистанция и т.п.) не сохраняются в БД,
 а смена маршрута сбрасывает их
7) Справочник всадников выводить по алфавиту
8) Справочник лошадей выводить по алфавиту
9) Вынести работу со справочниками в отдельное приложение. Из основного приложения пока не убирать...
10)В перепрыжку не выбирать участников с нулевым временем (не полные данные)
11)Добавить кнопку(чекбокс) "Перепрыжка сразу": показать перепрыжку для конкретного участника, если время не пусто, а штрафов нет.
 Продумать, как сохранить данные "Быстрой" перепрыжки, чтобы они показывались 
в обычной, и печатались в отчете, даже если общая перепрыжка не получилась
12)Справа, на свободном месте выводить примерного лидера маршрута, отслеживать
 изменения в динамике. Для классики - всегда, для перепрыжки - когда там
 есть данные
13)В поле "Всадник" основной таблицы выводить фамилию и имя
14)В судейском протоколе, в варианте с перепрыжкой, добавить строку со своим
 количеством прыжков для ввода данных по перепрыжке
15)Добавить обработку типа "маршрут по возрастающей сложности":
   -----------------------------------------------------------
  Обычно 6,8 или 10 препятствий. Задача - получить бОльшую сумму баллов при
меньшем времени.
За правильное прохождение каждого из препятствий начисляются баллы, 
соответствующие № препятствия (за первое - один балл, за второе - два и т.д.).
Если препятствие сбито - баллы за него к общей сумме не прибавляются.
В случае "закидки" лошади всаднику предоставляется возможность повторно
преодолеть препятствие, но уже за вычетом штрафных очков.
Формула суммирования баллов: S = S + №преп - Штраф.
Если препятствие сбито после "закидки", то баллы за данное препятствие 
не добавляются, а штрафные очки вычитаются из суммы баллов.

Рядом с последним препятствием устанавливается дополнительное, повышенной
сложности (Джокер),
которое участник может преодолеть вместо последнего для получения большего
 количества баллов (за чистое прохождение к общей сумме добавляется 20 баллов,
но за сбитого джокера эти 20 баллов из суммы вычитают!).
В таблице это поле идёт после последнего препятствия (имя по умолчанию - "J").
В случае "закидки" на Джокере участник получает штраф (как обычно, вычитается
из суммы), и может повторно преодолеть препятствие.
!!!Важно!!! Для этого повторного прыжка участник имеет право уйти от
Джокера и вернуться к последнему препятствию, получив(или не получив) за него
к-во баллов =№
Если после "закидки" на Джокере участник его сбивает, из его суммы баллов
 вычитаются 20 очков за препятствие и все штрафные очки за закидку.
--
Если участник потратил на маршрут больше расчетного времени, то из суммы
его баллов вычитаются штрафные очки за превышение времени (их расчет как
 в классике).
!! В правилах есть второй вариант: без учёта времени, но с перепрыжкой !!!
Пока его не берём...
--
Окончательный рейтинг участников строится по:
 а) по сумме баллов (может быть отрицательной): Мах сумма - 1 место
 б) по времени (при равенстве сумм баллов): min время - лучше
 в) в очень редком случае равенства а) и б) - участиники делят место (один номер).
т.е. примерный порядок сортировки:
ORDER BY "group", totalfouls1 DESC, gittime1 ASC, queue
-----------
Предварительный регламент ввода данных в ячейки основной таблицы по препятствиям:
положительное число - препятсвие пройдено (надо ли проверять соотвествие № ?)
ноль - препятствие сбито, но штраф за закидку не начислялся
отрицательное число - была закидка, и штраф за неё больше баллов за препятствие, либо сбитый Джокер.
Итог - арифметическое сложение данных из ячеек.
=================================================================================

2018-12-10
==========
1) п.13 требований: В поле "Всадник" показывать фамилию и имя.
 В основной запрос SEL_GIT (concour_DM) добавил сцепку || с пробелом-разделителем и именем, оставив имя колонки lastname;
 В главном гриде увеличил видимую ширину колонки lastname со 150 до 200px, а также MaxSize до 56;
2) п.п.7,8: всадники и лошади - по алфавиту.
 Внёс изменеия в БД - добавил предложения ORDER BY в "v_riders", "v_horses".
---
 На АРМ у заказчика пока проделать вручную, в интерпретаторе (.read updates_2018-12-10.sql)

2018-12-11
==========
1) Добавил в БД таблицу "vers" для учёта изменений

2) по п.1: вторая дата соревнований
 Добавил поле tourdate2 в tournaments и в v_tournaments;
 Добавил поле ввода даты на форму параметров соревнования;
 Внёс изменения в DM - в процедуры AddTournament и OpenTournament для записи
второй даты в БД, в FillRepParams - добавление параметра - второй даты;
 Модуль concour_export, проц. MakeRepHeader - добавил вывод второй даты
в ту же ячейку (через разделитель chr(10)) в случае, если даты не одинаковые.

3) по п.14 доп.строка в судейском протоколе
 Поменял последовательность номеров в константах rty_*;
 Добавил константу rty_RefReJump=-3 - для перепрыжки в суд.протоколе;
 Изменил список параметров в процедуре MakeStartXLS - вместо Bool поставил
RepType:Integer;
 Перед концом цикла по списку участников поставил печать доп.ячеек для
перепрыжки (по условию).
---
 На АРМ у заказчика пока проделать вручную, в интерпретаторе (.read updates_2018-12-11.sql)

2018-12-13
==========
1) по п.4: поменял текст на "К-во прыжков" и на TabSheet1, и на TabSheet2
2) по п.5: заголовки колонок
 Добавил поле в "routes" - colnames varchar(360) для
хранения заголовков (2 х 16полей х 10знаков + разделители);
 В DataModule добавил переменную ColNames типа TStringList, 
которая инициализируется в OnCreate, уничтожается OnDestroy модуля;
 При смене маршрута заголовки строкой читаются из БД (в ColNames.DelimitedText)
и при необходимости отрисовываются в проц. SetColNames(гл.формы),
где перебором подменяются текущие заголовки колонок
 (сейчас установлен фильтр только для полей "foul1_b" и "foul2_b");

 !!! Продумать и доделать: вывод измененных названий на печать???  !!!
---
 На АРМ у заказчика пока проделать вручную, в интерпретаторе (.read updates_2018-12-13.sql)

2018-12-17
==========
1) по п.3: связать турниры и маршруты
  Добавил поле tournament в таблицу  routes (и в v_routes);
 Поле запроса списка маршрутов (проц OpenRoute) формируется по условию:
   'where tournament=:p1' с подстановкой CurrTournament.
 В проц AddRoute добавлен столбец tournament и параметр p9 для него.
!! Сложность возникает в привязке существующих данных, если записи в git привязаны к одним маршрутам, но
      в разных соревнованиях !!! В этом случае нужно создавать дублёры маршрутов и корректировать привязку!
---
 На АРМ у заказчика пока проделать вручную, в интерпретаторе (.read updates_2018-12-17.sql)

2018-12-19
==========
1) по п.10 - отбор в перепрыжку только с заполненным полем времени гита
 В главном модуле, в проц.CalcPlaces, для типа маршрута 1 (Перепр.),
 в запросе отбора записей добавил условие  gittime1>0
2) по п.9 - внешнее приложение
 Вынес работу со справочниками в отдельное приложение (подкаталог JumperList),
основной функционал скопировал из гл.приложения.
!! Не протестировано полностью!!
!!! Обнаружилось осложение: файл БД открывается монопольно, поэтому внешнее
приложение может работать только если основное закрыто (и наоборот) !!!!
Во внешнем приложении ошибка подключения к БД (возникает не после Connect,
а после StartTransaction) обрабатывается, но в основном - надо предусмотреть!!!

2018-12-20
==========
1) по п.6 - обновление параметров маршрута из главного окна
 В DM добавил процедуру: RouteSetField для заполнения любого поля в Route,
 а в гл.модуле, у всех полей параметров, в событии OnChangeEditing её вызываю
 (в т.ч. для перепрыжки)


2018-12-26-2018-12-27
=====================
!!!Откатился с попытки от 25-12-2018г. на 20-12-2018г.
                         - т.к. вариант требует слишком много изменений
---
1) по п.11 - Перепрыжка сразу: 
 Пока видится вариант, когда нужный участник выбирается правой кнопкой
 (там соотв. пункт меню )
 После подведения итогов основного гита этот участник либо попадает
 в перепрыжку автоматически (по условиям выбора) и ранжируется, либо нет (что
 в этом случае делать?).
 !? Проверить, будут ли выводиться данные перепрыжки в отчёте у неранжированных!!
! При нынешнем алгоритме ранжирования участники перепрыжки выстраиваются перед
остальными, но при ручном выборе в перепрыжку пишется любой(он же там остаётся?)!

Поле overlap таблицы git задействовать для индикации, что участник был на
перепрыжке и его данные надо учитывать (=1 или =2). В этом случае выборку для показа
участников перепрыжки надо делать не по SELECT IN, а по WHERE overlap>0
(исправить везде, чтобы не было путаницы). Тогда OverList уже не требуется.

 ! НЕЯСНО, стоит ли при обновлении версии БД устанавливать overlap=1 для записей, где 
 gittime2>0 или totalfouls2>0... т.к. этом списке могут оказаться те,
 кто попал туда в процессе тестирования...

!!! Как сдвигать номера мест основного гита в случае добавления участника
в режиме "быстрой перепрыжки"? Пока сдвиг идёт на всех перепрыжчиков
---

 1) Убрал из проекта модуль concour_rep, т.к. html-отчеты не актуальны.
Дополнительно убрал RepPopupMenu и события 
 2) В DM заменил проц. SetFire на функцию GitSetField - теперь любое поле
можно изменять, что позволит не только изменять признак перепрыжки, но и 
расставлять места
 3) В гл.форме убрал OverList, и в проц. CalcPlaces убрал переменную over -
ранее накапливавшие участников перепрыжки - теперь всё сразу пишется в Git.
При этом, во многих местах убрал их в условиях отбора в перепрыжку, заменив
на доп.условие в SELECT...
 4) В CalcPlaces ввёл флаг WasOver, чтобы выводить сообщение о попадании
в перепрыжку
 5) Поправил DM.OpenGit с учётом новых условий отбора в перепрыжку
 6) в коммите от 2018-12-27 пока закомментил CalcPlacesOver, т.к. надо
продумать алгоритм...


2019-01-08
==========
Продолжение с п.11

!! Наблюдается странный эффект с присвоением мест, когда смешаны разные перепрыжки...
Самый плохой результат, поставленный в "быструю" перепрыжку следует в начале списка
!!! И наоборот, если был первым в основном гите, но в быстрой перепрыжке - хуже
всех, то подведение итогов перепрыжки забудет о заслугах в основном гите и
поставит его на последнее место!!! 

 1) Теперь в поле overlap пишется 1 при расчетной перепрыжке, и 2 при "быстрой".
Для удобства введены 2 константы OVER_CALC=1 и  OVER_FAST=2.
А условием отбора в перепрыжку будет overlap>0.
 2) В PopupMenu добавил пункт "Быстрая перепрыжка" и обработку события 
для него (пишет 0 или 2 в поле overlap, в отличие от расчётной =1).
 3) В DM ввел переменную CurrGitOrder для хранения состояния сортировки 
(const GIT_ORDER_Q=1 - по очереди, GIT_ORDER_R=2 - по местам).
!! Немного неудобно, что из гл.модуля надо обращаться по имени concour_DM.GIT_ORDER_...
 4) В DM.OpenGit изменил параметр Ordered на Integer, чтобы передавать тип сортировки,
либо =0, если не менять порядок (а просто перечитать набор).
 5) В CalcPlaces добавил вызов запроса на изменение Git - для обнуления списка
всех расчетных перепрыжчиков. В этом случае этот список будет каждый раз
обновляться по кнопке пересчета
 6) Там же поставил условие, что в расчётную перепрыжку не брать "быстрых", но считать!
 7) Раскомментил CalcPlacesOver и привёл её к условию отбора overlap>0, т.е. ВСЕ
перепрыжчики ранжируются по местам (и основной список сдвинется на их количество)


2019-01-11
==========
Продолжение по п.10
 Записи с пустым временем гита не должны участвовать в пересчете мест, как
в перепрыжке, так и в основном гите!
Пока вариант - делать проверку и расчет прерывать.

 1) В DM добавил ф-цию  GitCheckTime для проверки перед пересчетом итогов, что
не осталось записей с пустым временем.
 2) Перед вызовом CalcPlaces и CalcPlacesOver вызывается GitCheckTime и
расчет прерывается, если есть записи с пустыми значениями времени


2019-01-14
==========
По п.12 - Необходимо уточнение задачи: Показ лидера не учтёт разбивку на зачёты!!

 1) Добавил LeaderLabel на гл.форме
 2) Добавил ф-цию GetLeader в DM (там SELECT как в CalcPlaces)
 3) В конце проц. CalcPenalties (как реакция на изменения) значение LeaderLabel
заполняется значением GetLeader()

2019-01-16
==========
Криво использовал типы маршрутов: вместо присвоенных констант (в шапке 
concour_main), к которым привязаны теги столбцов главной таблицы, применял
индексы, под которыми маршруты перечислены в StringList (и ComboBox).
Для исправления:
 1) В StringList теперь пишутся названия и константы типов маршрутов (AddObject)
 2) Добавил ф-цию GetRouteTypeNum, чтобы по типу найти его индекс в списке
 3) Множественные замены индексов типов на значения (искать по дате в комментах),
Местами:
        Integer(RouteTypeCB.Items.Objects[RouteTypeCB.ItemIndex])
вместо
	RouteTypeCB.ItemIndex
усложняет чтение в данном контексте, но логичнее...

В других местах кода:
  вместо индекса 0 или 1 (в case или if) указано concour_main.ROUTE_CLASSIC
или concour_main.ROUTE_OVERLAP, что делает понятнее из-за имён констант... 

 4) В БД (табл. routes) заменить старые (неправильные) значения поля route_type
( 1 на 2, 0 на 1)
---
 На АРМ у заказчика пока проделать вручную, в интерпретаторе (.read updates_2018-12-16.sql)

2019-01-17
==========
По п.15 - "маршрут по возрастающей сложности":
 1) В GitDBGridDrawColumnCell убрал красную подсветку для этого маршрута
(доп. условие в if)
!!! Но (пока-?) для этого маршрута штраф за время перестал быть красным !!!
 2) Под к-вом прыжков добавил Label с Caption='В т.ч. доп. колонка для Joker'.
С условием видимости при типе маршрута =ROUTE_GROW
В этом случае не требуется отдельно обрабатывать видимость колонки Joker,
а также гарантирует, что не превысит мах к-ва полей очков в БД.
 3) Перенес инициализацию полей формы StageFrm непосредственно в FormCreate
из модуля concour_bases, чтобы в режиме изменений открывать соотв. параметры
 4) CalcPlaces - в case добавил блок для подсчета мест, хотя от классик отличается
лишь порядком сортировки в запросе.
!! Возможно, потом можно будет объединить...
 5) В BasesFrm.EditBase добавил кусок(искать по дате) для присвоения
последней колонке заголовка 'J'. 
!!! При создании нового маршрута (сразу после возврата в главный грид)
не показывает 'J' в заголовоке, но после переключения маршрутов(или
перезапуска прил.) - норм.
 6) В StagesFrm добавил проверку, что к-во прыжков от 1 до 15 
(от 2 для возр.сложности).


2019-01-21
==========
По п.15 - "маршрут по возрастающей сложности"(продолженние):
 1) В CalcPenalties добавил условие: в случае возр.сложности штраф за превышение
времени вычитается из суммы баллов, а для остальных - как было, сумма штрафов.
 2) Пофиксил баг: Тип штрафа за время (осн.гит) не писался в БД (в поле result_type), 
хотя начальное значение бралось из БД (default 0). При этом, при вводе/правке
маршрута поле не показано, менять можно только на гл.форме (пока так...).

2019-01-23
==========
По п.15 - "маршрут по возрастающей сложности"(продолженние):
 1) При добавлении маршрута (StageFrm) поставил начальное к-во прыжков = 11
(так подходит для всех типов маршрутов (?) )
 2) В GitDBGridEditingDone добавил проверку введённого значения: теперь не
принимает отрицательные значения (кроме баллов в маршруте по возр.сл.)

!! Продумать, что удобнее и проще: при изменении к-ва прыжков отслеживать
последний столбец и переписывать заголовок или всегда показывать 15-й 
как Joker ...
 *) Как быть с заголовками, когда меняем к-во прыжков? "J" должен всегда
быть последним! Значит, в GitGridRefreshVisibility вызывать соотв.процедуру?


2019-01-25
==========
Как оказалось, в 64-разрядной версии компилятор поругался на сохранение
Integer как TObject в StringList. Пришлось везде (где компилятор показал ошибки)
изменить Integer на Int64 - тогда скомпилировалось.
!!! Проверить потом на х32, что тоже компилится... Иначе, {$ifdef}

 
2019-01-27
==========
По п.15 - "маршрут по возрастающей сложности"(продолженние):
 Для печати отчета:
 1) Добавил секцию XLSRep_3 в ini-файл
 2) Т.к. в отчете колонки те же, что и в классике, то вызывается MakeXLS_0,
и отчет там и формируется, добавлено только условие для копии нужного листа


2019-01-28
==========
 1) На Win32 правки(Int64) не пошли, поэтому пришлось вставлять блоки:
{$IFDEF WIN64} Int64 ...
{$ELSE} Integer  ...
 2) Подогнал отчёты (шаблон и ini)


2019-01-30
==========
 1) Пофиксил баг: при выборе свойств маршрута не отрабатывало событие
RouteTypeCBChange - не та скобка в {$IFDEF} 
 2) В DM.GetLeader добавил условие отбора gittime{1,2}>0 в запрос, чтобы
рейтинг строился по обработанным участникам
 3) В ExpFrm у всех отчетов убрал DirectPrint. Теперь любой отчет открывается,
а не печатается (предварительно можно сохранить). Печатать уже из Excel.


2019-02-02
==========
 1) При обновлении метаданных в БД выявилась кривизна: кирилличсеские названия полей
дат соревнований в v_tournaments из-за путаницы кодировок на разных системах вызвали ошибку.
Решение: заменить названия полей на латиницу "tourdate","tourdate2" - как в БД (пересоздать view),
так и в модулях:  concour_bases, concour_dm.
!!!
  Вручную выполнить файл изменения метаданных от 02-02-2019
!!!
 2) Условие сортировки в v_tournaments изменено на:
		ORDER BY tournaments.tourdate,tournaments.tourdate2
т.е. берет даты для сортировки в оригинальном виде, а не в печатном.
 3) В открытие XLS-шаблона добавил параметр ReadOnly:=True ;
При финализации работы с отчетом добавил строку закрытия шаблона Workbook(1).Close, чтобы
он не мешал работать с оставшимся файлом-отчетом.
 4) Для удаления соревнования целиком (старого, например) добавил в DM ф-цию
DestroyTournament, которая вызывается в concour_bases после проверки/удаления
DelTournament и дополнительного подтверждения от юзера.
!!! Продумать вариант с архивацией старых данных с возможностью восстановления ?!

2019-02-08
==========
 1) Полное удаление соревнования (DestroyTournament) не коммиттит транзакцию,
процесс удаления не фиксируется, если сразу после удаления закрыть программу.
Добавил в функц. StartTransaction, CommitRetaining, RollbackRetaining.
 2) На маршруте по возр.сложности лидер маршрута выбирается неправильно
В функц. DM.GetLeader добавил условие для учёта этого типа маршрута и
отбор по убыванию итогов (totalfouls1 DESC)
 3) StageFrm: Для маршрута по возр.сложности в параметрах убрал необходимось +J
 в к-ве прыжков (и изм. подсказку)
 4) MainFrm: Добавил CheckBox "Joker" рядом с к-вом прыжков (осн.маршрут),
невидимый при старте программы, но отображаемый для типа ROUTE_GROW
при вызове GitGridRefreshVisibility
  

2019-02-14
==========
 1) BasesFrm.EditBase: Убрал присвоение заголовка "J" в colnames у последнего
препятствия, т.к. в к-ве прыжков не будет учитываться Джокер.
 2) В конце проц. GitGridRefreshVisibility вызывается SetJokerVisibility, где: 
Если отмечен CheckBox Joker, то показывает 15 колонку с заголовком "J" и
подсчитывать очки из этого поля.
Если не отмечен, то прячет 15 колонку
!!!! Пока закомментил в коде: !!!
!! и после запроса подтверждения обнуляет (DM.GitClearJoker) у всех
!!участников поле foul1_b15, чтобы,в случае повторной отметки, не прибавлять
!!старое значение.
!! Это может потребоваться, чтобы не хранить в БД состояние Joker CheckBox
!! Или чтобы очки пересчитывались сразу по всем участникам (сейчас- у текущего)
!!!
 3) На Joker ComboBox.OnChange повесил вызов GitGridRefreshVisibility, т.к.
недо пересчитать очки
 4) В CalcPlaces добавил условие для маршрута с возр.сложностью -
Добавляет к общей сумме очков значение Джокера (если установлен флаг)
 5) В  Barriers1SpinEditEditingDone добавил валидацию к-ва прыжков, чтобы
не посчитать Джокера дважды.


2019-02-18
==========
 1) Сделал новый пункт в гл. меню - Выбор соревнования (без выхода из программы)
и повесил на него соотв. событие. Если выбрано иное (от текущего) соревнование, 
то дополнительно будет открыт диалог выбора маршрута.

2019-02-24
==========
 1) Добавил две пустые функции-заглушки в StagesFrm -надо туда перенести
из BasesFrm функционал для сохранения полей, когда нажата Ok
Ну и мелочевка:
 2) в BasesFrm оставил только один вызов LowerCase(TableName) - в OnCreate,
а дальше - просто использую TableName


2019-03-02
==========
!!!!   На Win x64 отладчик не запускался... Совет из Сети: убрать пробелы
из путей компиляции...
Изменил имя папки "My Develop" на "My_Develop" - заработал !!!!

 1) В MainFrm.SetJokerVisibility, в условие по 15 полю добавил принудительную
запись 'J' в заголовок, если ранее он не был заполнен вручную (и не записан в БД).


